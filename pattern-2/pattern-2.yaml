# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: 2010-09-09
Description: >-
  WSO2 API Manager deployment with WSO2 API Manager Analytics (Pattern 2)
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Cluster Configuration
        Parameters:
          - AWSAccessKeyId
          - AWSAccessKeySecret
          - KeyPairName
          - WSO2InstanceType
      - Label:
          default: Network Configuration
        Parameters:
          - CertificateName
      - Label:
          default: Database Credentials
        Parameters:
          - DBUsername
          - DBPassword
      - Label:
          default: WUM Credentials
        Parameters:
          - WUMUsername
          - WUMPassword
    ParameterLabels:
      AWSAccessKeyId:
        default: AWS Access Key ID
      AWSAccessKeySecret:
        default: AWS Access Secret Key
      CertificateName:
        default: SSL Certificate Name
      KeyPairName:
        default: Key Pair Name
      DBUsername:
        default: Username
      DBPassword:
        default: Password
      JDK:
        default: JDK Version
      WUMUsername:
        default: Username
      WUMPassword:
        default: Password
      WSO2InstanceType:
        default: Instance Type
Resources:
  # networking configurations
  WSO2APIMVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
  WSO2APIMPublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      CidrBlock: 10.0.254.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
  WSO2APIMPublicSubnet2:
      Type: 'AWS::EC2::Subnet'
      Properties:
        VpcId: !Ref WSO2APIMVPC
        CidrBlock: 10.0.252.0/24
        AvailabilityZone: !Select
          - '1'
          - !GetAZs ''
  WSO2APIMPublicInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  WSO2APIMPublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2APIMVPC
  WSO2APIMPublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2APIMPublicRouteTable
      SubnetId: !Ref WSO2APIMPublicSubnet1
  WSO2APIMPublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2APIMPublicRouteTable
      SubnetId: !Ref WSO2APIMPublicSubnet2
  WSO2APIMPublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref WSO2APIMPublicRouteTable
      GatewayId: !Ref WSO2APIMPublicInternetGateway
      DestinationCidrBlock: 0.0.0.0/0
    DependsOn: WSO2APIMVPCInternetGatewayAttachment
  WSO2APIMVPCInternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref WSO2APIMPublicInternetGateway
      VpcId: !Ref WSO2APIMVPC
  WSO2APIMPrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
  WSO2APIMPrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
  WSO2APIMPrivateSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2APIMVPC
  WSO2APIMPrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref WSO2APIMNATGateway
      RouteTableId: !Ref WSO2APIMPrivateSubnetRouteTable
  WSO2APIMPrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2APIMPrivateSubnetRouteTable
      SubnetId: !Ref WSO2APIMPrivateSubnet1
  WSO2APIMPrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2APIMPrivateSubnetRouteTable
      SubnetId: !Ref WSO2APIMPrivateSubnet2
  WSO2APIMNATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - WSO2APIMEIP
        - AllocationId
      SubnetId: !Ref WSO2APIMPublicSubnet1
  WSO2BastionEIPAssociation:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt WSO2BastionEIP.AllocationId
      InstanceId: !Ref WSO2BastionInstance
  WSO2APIMEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  WSO2BastionEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  # database configurations
  WSO2APIMDBInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      GroupDescription: DB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
  WSO2APIMDBInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      VPCSecurityGroups:
        - !Ref WSO2APIMDBInstanceSecurityGroup
      DBInstanceClass: db.t2.large
      AllocatedStorage: 5
      BackupRetentionPeriod: '0'
      DBInstanceIdentifier: WSO2APIMDBInstance
      DBName: WSO2AM_DB
      Engine: MySQL
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MultiAZ: 'true'
      StorageType: gp2
      DBSubnetGroupName: !Ref WSO2APIMDBSubnetGroup
  WSO2APIMAnalyticsDBInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      VPCSecurityGroups:
        - !Ref WSO2APIMDBInstanceSecurityGroup
      DBInstanceClass: db.t2.large
      AllocatedStorage: 5
      BackupRetentionPeriod: '0'
      DBInstanceIdentifier: WSO2APIMAnalyticsDBInstance
      DBName: WSO2AMAnalytics_DB
      Engine: MySQL
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MultiAZ: 'true'
      StorageType: gp2
      DBSubnetGroupName: !Ref WSO2APIMDBSubnetGroup
  WSO2APIMDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: DB Subnet Group
      SubnetIds:
        - !Ref WSO2APIMPrivateSubnet1
        - !Ref WSO2APIMPrivateSubnet2
  # File system configurations
  WSO2APIMEFSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      GroupDescription: EFS Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '2049'
        ToPort: '2049'
        CidrIp: 0.0.0.0/0
  WSO2APIMEFSFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      PerformanceMode: generalPurpose
  WSO2APIMAnalyticsEFSFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      PerformanceMode: generalPurpose
  WSO2APIMPrivateSubnet1EFSMountTarget:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      SubnetId: !Ref WSO2APIMPrivateSubnet1
      FileSystemId: !Ref WSO2APIMEFSFileSystem
      SecurityGroups:
        - !Ref WSO2APIMEFSSecurityGroup
  WSO2APIMPrivateSubnet2EFSMountTarget:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      SubnetId: !Ref WSO2APIMPrivateSubnet2
      FileSystemId: !Ref WSO2APIMEFSFileSystem
      SecurityGroups:
        - !Ref WSO2APIMEFSSecurityGroup
  WSO2APIMAnalyticsPrivateSubnet1EFSMountTarget:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      SubnetId: !Ref WSO2APIMPrivateSubnet1
      FileSystemId: !Ref WSO2APIMAnalyticsEFSFileSystem
      SecurityGroups:
        - !Ref WSO2APIMEFSSecurityGroup
  # Product configurations
  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      GroupDescription: WSO2 API Manager Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  WSO2APIMSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      GroupDescription: WSO2 API Manager Security Group
      GroupName: WSO2APIMSecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '5672'
          ToPort: '5672'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '7611'
          ToPort: '7611'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '7711'
          ToPort: '7711'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '7611'
          ToPort: '7611'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9611'
          ToPort: '9611'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '5672'
          ToPort: '5672'
          SourceSecurityGroupId: !Ref WSO2APIMLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9711'
          ToPort: '9711'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8140'
          ToPort: '8140'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
  WSO2BastionInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !FindInMap
        - WSO2APIMAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: WSO2BastionInstance
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref WSO2APIMPublicSubnet1
          GroupSet:
            - !Ref BastionSecurityGroup
  PuppetMaster:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !FindInMap
        - WSO2PuppetMasterRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      KeyName: !Ref KeyPairName
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: PuppetMasterInstance
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref WSO2APIMPrivateSubnet1
          GroupSet:
            - !Ref PuppetMasterSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - echo "> Set hostname to puppetmaster"
            - hostname puppetmaster
            - echo $(hostname) >> /etc/hostname
            - echo "127.0.0.1 $(hostname)" >> /etc/hosts
            - sed -i '/\[main\]/a dns_alt_names=puppetmaster,puppet\nenvironmentpath=$confdir/environments\nhiera_config=/etc/puppet/hiera.yaml' /etc/puppet/puppet.conf
            - sed -i '/\[master\]/a autosign=true' /etc/puppet/puppet.conf
            - service puppetmaster restart
            - !Sub "./home/ubuntu/apim-init.sh ${WUMUsername} ${WUMPassword}"
            - !Sub "./home/ubuntu/apim-analytics-init.sh ${WUMUsername} ${WUMPassword}"
            - !Join
              - ''
              - - sed -i "s/access-key/
                - !Ref AWSAccessKeyId
                - /g" /etc/puppet/hieradata/dev/wso2/wso2am_runtime/pattern-3/default.yaml
            - !Join
              - ''
              - - sed -i "s/REGION_NAME/
                - !Ref "AWS::Region"
                - /g" /etc/puppet/hieradata/dev/wso2/wso2am_runtime/pattern-3/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_ELB_DNS_NAME/
                - !GetAtt
                  - WSO2APIMAnalyticsLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/hieradata/dev/wso2/wso2am_analytics/pattern-1/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_RDS_HOST/
                - !GetAtt
                  - WSO2APIMAnalyticsDBInstance
                  - Endpoint.Address
                - >-
                  /g"
                  /etc/puppet/hieradata/dev/wso2/wso2am_analytics/pattern-1/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_ELB_DNS_NAME/
                - !GetAtt
                  - WSO2APIMLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/hieradata/dev/wso2/wso2am_runtime/pattern-3/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_GATEWAY_ELB_DNS_NAME/
                - !GetAtt
                  - WSO2APIMGatewayLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/hieradata/dev/wso2/wso2am_runtime/pattern-3/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_TRAFFIC_MANAGER/
                - !GetAtt
                  - WSO2APIMLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/hieradata/dev/wso2/wso2am_runtime/pattern-3/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /etc/puppet/hieradata/dev/wso2/common.yaml
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /etc/puppet/hieradata/dev/wso2/common.yaml
            - !Join
              - ''
              - - sed -i "s/JDK_VERSION/
                - 'jdk-8u144-linux-x64.tar.gz'
                - /g" /etc/puppet/hieradata/dev/wso2/common.yaml
            - !Join
              - ''
              - - sed -i "s/CF_RDS_URL/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
                - /g" /etc/puppet/hieradata/dev/wso2/common.yaml
            - !Join
              - ''
              - - sed -i "s^secretkey^
                - !Ref AWSAccessKeySecret
                - ^g" /etc/puppet/hieradata/dev/wso2/wso2am_runtime/pattern-3/default.yaml
  PuppetMasterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      GroupDescription: WSO2 API Manager Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8140'
          ToPort: '8140'
          CidrIp: 0.0.0.0/0
  WSO2APIMNode1LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2APIMAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2APIMSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - apt-get install -y nfs-common
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh jdk-8u144-linux-x64.tar.gz"
            - mkdir -p /mnt/efs
            - !Sub "mount -t nfs4 -o nfsvers=4.1 ${WSO2APIMEFSFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /mnt/efs"
            - export DB_NAME=WSO2AM_DB
            - !Join
              - ''
              - - export DB_HOSTNAME=
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
            - !Join
              - ''
              - - export DB_PORT=
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Port
            - !Join
              - ''
              - - export DB_USERNAME=
                - !Ref DBUsername
            - !Join
              - ''
              - - export DB_PASSWORD=
                - !Ref DBPassword
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_apim.sh
            - sleep 500
            - sudo /opt/pattern-2/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_apim.sh
            - sleep 10
            - 'if [ ! -d "/mnt/efs/deployment/server" ]; then'
            - '    mkdir -p /mnt/efs/deployment/server'
            - '    cp -r /mnt/wso2am-2.5.0/repository/deployment/server /mnt/efs/deployment'
            - fi
            - >-
              rm -rf
              /mnt/wso2am-2.5.0/repository/deployment/server
            - >-
              ln -s /mnt/efs/deployment/server
              /mnt/wso2am-2.5.0/repository/deployment/server
            - 'if [ ! -d "/mnt/efs/tenants" ]; then'
            - '    mkdir -p /mnt/efs/tenants'
            - '    cp -r /mnt/wso2am-2.5.0/repository/tenants /mnt/efs'
            - fi
            - >-
              rm -rf
              /mnt/wso2am-2.5.0/repository/tenants
            - >-
              ln -s /mnt/efs/tenants
              /mnt/wso2am-2.5.0/repository/tenants
            - apt-get install -y python3-pip
            - pip3 install boto3
            - !Sub "PRIVATE_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMAnalyticsInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/log4j.properties
            - !Sub "GATEWAY_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMGatewayInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_GATEWAY_IP/
                - $GATEWAY_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - !Sub "KEYMANAGER_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMKeyManagerInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_KEY_MANAGER_IP/
                - $KEYMANAGER_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - /mnt/wso2am-2.5.0/bin/wso2server.sh start
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2APIMAnalyticsNode1AutoScalingGroup
      - WSO2APIMSecurityGroup
      - WSO2APIMLoadBalancer
      - WSO2APIMVPCInternetGatewayAttachment
      - PuppetMaster
  WSO2APIMNode1AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2APIMNode1LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2APIMLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2APIMPrivateSubnet1
      Tags:
        - Key: Name
          Value: WSO2APIMInstance1
          PropagateAtLaunch: 'true'
        - Key: cluster
          Value: apim
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2APIMLoadBalancer
      - WSO2APIMNode1LaunchConfiguration
  WSO2APIMNode2LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2APIMAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2APIMSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - apt-get install -y nfs-common
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh jdk-8u144-linux-x64.tar.gz"
            - mkdir -p /mnt/efs
            - !Sub "mount -t nfs4 -o nfsvers=4.1 ${WSO2APIMEFSFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /mnt/efs"
            - export DB_NAME=WSO2AM_DB
            - !Join
              - ''
              - - export DB_HOSTNAME=
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
            - !Join
              - ''
              - - export DB_PORT=
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Port
            - !Join
              - ''
              - - export DB_USERNAME=
                - !Ref DBUsername
            - !Join
              - ''
              - - export DB_PASSWORD=
                - !Ref DBPassword
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_apim.sh
            - sleep 500
            - sudo /opt/pattern-2/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_apim.sh
            - sleep 10
            - 'if [ ! -d "/mnt/efs/deployment/server" ]; then'
            - '    mkdir -p /mnt/efs/deployment/server'
            - '    cp -r /mnt/wso2am-2.5.0/repository/deployment/server /mnt/efs/deployment'
            - fi
            - >-
              rm -rf
              /mnt/wso2am-2.5.0/repository/deployment/server
            - >-
              ln -s /mnt/efs/deployment/server
              /mnt/wso2am-2.5.0/repository/deployment/server
            - 'if [ ! -d "/mnt/efs/tenants" ]; then'
            - '    mkdir -p /mnt/efs/tenants'
            - '    cp -r /mnt/wso2am-2.5.0/repository/tenants /mnt/efs'
            - fi
            - >-
              rm -rf
              /mnt/wso2am-2.5.0/repository/tenants
            - >-
              ln -s /mnt/efs/tenants
              /mnt/wso2am-2.5.0/repository/tenants
            - apt-get install -y python3-pip
            - pip3 install boto3
            - !Sub "PRIVATE_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMAnalyticsInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/log4j.properties
            - !Sub "GATEWAY_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMGatewayInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_GATEWAY_IP/
                - $GATEWAY_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - !Sub "KEYMANAGER_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMKeyManagerInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_KEY_MANAGER_IP/
                - $KEYMANAGER_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - /mnt/wso2am-2.5.0/bin/wso2server.sh start
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2APIMAnalyticsNode1AutoScalingGroup
      - WSO2APIMSecurityGroup
      - WSO2APIMLoadBalancer
      - WSO2APIMVPCInternetGatewayAttachment
      - PuppetMaster
  WSO2APIMNode2AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2APIMNode2LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2APIMLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2APIMPrivateSubnet2
      Tags:
        - Key: Name
          Value: WSO2APIMInstance2
          PropagateAtLaunch: 'true'
        - Key: cluster
          Value: apim
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2APIMLoadBalancer
      - WSO2APIMNode2LaunchConfiguration
  WSO2APIMAnalyticsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      GroupDescription: WSO2 API Manager Analytics Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4040'
          ToPort: '4040'
          SourceSecurityGroupId: !Ref WSO2APIMAnalyticsLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          SourceSecurityGroupId: !Ref WSO2APIMAnalyticsLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          SourceSecurityGroupId: !Ref WSO2APIMAnalyticsLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '7611'
          ToPort: '7611'
          SourceSecurityGroupId: !Ref WSO2APIMAnalyticsLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '7711'
          ToPort: '7711'
          SourceSecurityGroupId: !Ref WSO2APIMAnalyticsLoadBalancerSecurityGroup
  WSO2APIMAnalyticsNode1LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2APIMAnalyticsAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2APIMAnalyticsSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - export DB_NAME=WSO2AM_DB
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh jdk-8u144-linux-x64.tar.gz"
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2APIMAnalyticsDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2APIMAnalyticsDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_analytics.sh
            - sleep 500
            - sudo /opt/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_analytics.sh
            - sleep 10
            - /mnt/wso2am-analytics-2.5.0/bin/wso2server.sh start
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2APIMSecurityGroup
      - WSO2APIMAnalyticsLoadBalancer
      - WSO2APIMVPCInternetGatewayAttachment
      - PuppetMaster
  WSO2APIMAnalyticsNode1AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2APIMAnalyticsNode1LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2APIMAnalyticsLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2APIMPrivateSubnet1
      Tags:
        - Key: Name
          Value: WSO2APIMAnalyticsInstance1
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2APIMAnalyticsLoadBalancer
      - WSO2APIMAnalyticsNode1LaunchConfiguration
# Gateway 1
  WSO2APIMGateway1LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2APIMAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2APIMSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - apt-get install -y nfs-common
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh jdk-8u144-linux-x64.tar.gz"
            - mkdir -p /mnt/efs
            - !Sub "mount -t nfs4 -o nfsvers=4.1 ${WSO2APIMEFSFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /mnt/efs"
            - export DB_NAME=WSO2AM_DB
            - !Join
              - ''
              - - export DB_HOSTNAME=
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
            - !Join
              - ''
              - - export DB_PORT=
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Port
            - !Join
              - ''
              - - export DB_USERNAME=
                - !Ref DBUsername
            - !Join
              - ''
              - - export DB_PASSWORD=
                - !Ref DBPassword
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_apim.sh
            - sleep 500
            - sudo /opt/pattern-2/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_apim.sh
            - sleep 10
            - apt-get install -y python3-pip
            - pip3 install boto3
            - !Sub "PRIVATE_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMAnalyticsInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/log4j.properties
            - !Sub "GATEWAY_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMGatewayInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_GATEWAY_IP/
                - $GATEWAY_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - !Sub "KEYMANAGER_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMKeyManagerInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_KEY_MANAGER_IP/
                - $KEYMANAGER_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - /mnt/wso2am-2.5.0/bin/wso2server.sh start
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2APIMAnalyticsNode1AutoScalingGroup
      - WSO2APIMSecurityGroup
      - WSO2APIMLoadBalancer
      - WSO2APIMVPCInternetGatewayAttachment
      - PuppetMaster
  WSO2APIMGateway1AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2APIMGateway1LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2APIMGatewayLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2APIMPrivateSubnet1
      Tags:
        - Key: Name
          Value: WSO2APIMGatewayInstance1
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2APIMLoadBalancer
      - WSO2APIMGateway1LaunchConfiguration
# Key Manager 1
  WSO2APIMKeyManager1LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2APIMAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2APIMSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - apt-get install -y nfs-common
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh jdk-8u144-linux-x64.tar.gz"
            - mkdir -p /mnt/efs
            - !Sub "mount -t nfs4 -o nfsvers=4.1 ${WSO2APIMEFSFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /mnt/efs"
            - export DB_NAME=WSO2AM_DB
            - !Join
              - ''
              - - export DB_HOSTNAME=
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
            - !Join
              - ''
              - - export DB_PORT=
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Port
            - !Join
              - ''
              - - export DB_USERNAME=
                - !Ref DBUsername
            - !Join
              - ''
              - - export DB_PASSWORD=
                - !Ref DBPassword
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_apim.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2APIMDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_apim.sh
            - sleep 500
            - sudo /opt/pattern-2/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_apim.sh
            - sleep 10
            - apt-get install -y python3-pip
            - pip3 install boto3
            - !Sub "PRIVATE_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMAnalyticsInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/log4j.properties
            - !Sub "GATEWAY_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMGatewayInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_GATEWAY_IP/
                - $GATEWAY_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - !Sub "KEYMANAGER_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2APIMKeyManagerInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_KEY_MANAGER_IP/
                - $KEYMANAGER_IP
                - >-
                  /g"
                  /mnt/wso2am-2.5.0/repository/conf/api-manager.xml
            - /mnt/wso2am-2.5.0/bin/wso2server.sh start
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2APIMAnalyticsNode1AutoScalingGroup
      - WSO2APIMSecurityGroup
      - WSO2APIMLoadBalancer
      - WSO2APIMVPCInternetGatewayAttachment
      - PuppetMaster
  WSO2APIMKeyManager1AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2APIMKeyManager1LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2APIMKeyManagerLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2APIMPrivateSubnet1
      Tags:
        - Key: Name
          Value: WSO2APIMKeyManagerInstance1
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2APIMLoadBalancer
      - WSO2APIMKeyManager1LaunchConfiguration
  WSO2APIMLoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      GroupDescription: WSO2 APIM ELB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '7611'
          ToPort: '7611'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '7711'
          ToPort: '7711'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9711'
          ToPort: '9711'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9611'
          ToPort: '9611'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9711'
          ToPort: '9711'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5672'
          ToPort: '5672'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '7611'
          ToPort: '7611'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '7711'
          ToPort: '7711'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9711'
          ToPort: '9711'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9611'
          ToPort: '9611'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5672'
          ToPort: '5672'
          CidrIp: 0.0.0.0/0
  WSO2APIMLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: true
      SecurityGroups:
        - !Ref WSO2APIMLoadBalancerSecurityGroup
      Subnets:
        - !Ref WSO2APIMPublicSubnet2
        - !Ref WSO2APIMPublicSubnet1
      LBCookieStickinessPolicy:
        - PolicyName: LBStickyPolicy
      Listeners:
        - LoadBalancerPort: '9763'
          InstancePort: '9763'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '8280'
          InstancePort: '8280'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
        - LoadBalancerPort: '9443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
        - LoadBalancerPort: '8243'
          InstancePort: '8243'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
      HealthCheck:
          Target: 'TCP:9763'
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '10'
          Timeout: '5'
    DependsOn:
      - WSO2APIMLoadBalancerSecurityGroup
  WSO2APIMKeyManagerLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: true
      SecurityGroups:
        - !Ref WSO2APIMLoadBalancerSecurityGroup
      Subnets:
        - !Ref WSO2APIMPublicSubnet2
        - !Ref WSO2APIMPublicSubnet1
      LBCookieStickinessPolicy:
        - PolicyName: LBStickyPolicy
      Listeners:
        - LoadBalancerPort: '9763'
          InstancePort: '9763'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '8280'
          InstancePort: '8280'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
        - LoadBalancerPort: '9443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
        - LoadBalancerPort: '8243'
          InstancePort: '8243'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
      HealthCheck:
          Target: 'TCP:9763'
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '10'
          Timeout: '5'
    DependsOn:
      - WSO2APIMLoadBalancerSecurityGroup
  WSO2APIMGatewayLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: true
      SecurityGroups:
        - !Ref WSO2APIMLoadBalancerSecurityGroup
      Subnets:
        - !Ref WSO2APIMPublicSubnet2
        - !Ref WSO2APIMPublicSubnet1
      LBCookieStickinessPolicy:
        - PolicyName: LBStickyPolicy
      Listeners:
        - LoadBalancerPort: '9763'
          InstancePort: '9763'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '8280'
          InstancePort: '8280'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
        - LoadBalancerPort: '9443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
        - LoadBalancerPort: '8243'
          InstancePort: '8243'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
      HealthCheck:
          Target: 'TCP:9763'
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '10'
          Timeout: '5'
    DependsOn:
      - WSO2APIMLoadBalancerSecurityGroup
  WSO2APIMAnalyticsLoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2APIMVPC
      GroupDescription: WSO2 APIM Analytics ELB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4040'
          ToPort: '4040'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4040'
          ToPort: '4040'
          CidrIp: 0.0.0.0/0
  WSO2APIMAnalyticsLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: true
      SecurityGroups:
        - !Ref WSO2APIMAnalyticsLoadBalancerSecurityGroup
      Subnets:
        - !Ref WSO2APIMPublicSubnet2
        - !Ref WSO2APIMPublicSubnet1
      LBCookieStickinessPolicy:
        - PolicyName: LBStickyPolicy
      Listeners:
        - LoadBalancerPort: '9763'
          InstancePort: '9763'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '80'
          InstancePort: '4040'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
      HealthCheck:
          Target: 'TCP:9763'
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '10'
          Timeout: '5'
    DependsOn:
      - WSO2APIMAnalyticsLoadBalancerSecurityGroup
Outputs:
  APIMServicePublisherURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2APIMLoadBalancer
          - DNSName
        - '/publisher'
    Description: APIM service publisher URL
  APIMServiceStoreURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2APIMLoadBalancer
          - DNSName
        - '/store'
    Description: APIM service store URL
  APIMAnalyticsServiceURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2APIMAnalyticsLoadBalancer
          - DNSName
        - '/carbon'
    Description: APIM Analytics Management Console
  SparkUIURL:
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - WSO2APIMAnalyticsLoadBalancer
          - DNSName
        - '/jobs'
    Description: Spark UI Management Console
  APIMGatewayHTTPSEndpoint:
    Value: !Join
      - ''
      - - ''
        - !GetAtt
          - WSO2APIMGatewayLoadBalancer
          - DNSName
        - ':8243'
    Description: APIM HTTPS Gateway endpoint
  APIMGatewayHTTPEndpoint:
    Value: !Join
      - ''
      - - ''
        - !GetAtt
          - WSO2APIMGatewayLoadBalancer
          - DNSName
        - ':8280'
    Description: APIM HTTP Gateway endpoint
Parameters:
  AWSAccessKeyId:
    Type: String
  AWSAccessKeySecret:
    Type: String
  KeyPairName:
    Description: >-
      The private key used to log in to instances through SSH
    Type: 'AWS::EC2::KeyPair::KeyName'
  CertificateName:
    Description: A valid SSL certificate used for HTTPS
    Type: String
    MinLength: 1
  WSO2InstanceType:
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
    ConstraintDescription: Must be a valid EC2 instance type
  WUMPassword:
    Type: String
    Default: ""
    NoEcho: true
  WUMUsername:
    Type: String
    Default: ""
  DBUsername:
    Type: String
    MinLength: 4
    AllowedPattern: '[A-Za-z0-9\-]+'
  DBPassword:
    Type: String
    MinLength: 8
    NoEcho: true
Mappings:
  WSO2PuppetMasterRegionMap:
    ap-southeast-2:
      Ubuntu140464bit: ami-0a0075377e2fc407d
    eu-west-1:
      Ubuntu140464bit: ami-0ef32aec34e07c718
    us-east-1:
      Ubuntu140464bit: ami-008d181a63651b582
    us-east-2:
      Ubuntu140464bit: ami-0148befd98fb35693
    us-west-1:
      Ubuntu140464bit: ami-0fe9d57d64d67a03a
    us-west-2:
      Ubuntu140464bit: ami-01bbc34c5b696d065
  WSO2APIMAMIRegionMap:
    ap-southeast-2:
      Ubuntu140464bit: ami-063fe9607e4cfdb67
    eu-west-1:
      Ubuntu140464bit: ami-0b9f92fa9717f933e
    us-east-1:
      Ubuntu140464bit: ami-0f98070e4bb0a6296
    us-east-2:
      Ubuntu140464bit: ami-08edd02ee7e3204ae
    us-west-1:
      Ubuntu140464bit: ami-0c1c5c5eae5bd07f4
    us-west-2:
      Ubuntu140464bit: ami-00dfd2c1c44ba91e8
  WSO2APIMAnalyticsAMIRegionMap:
    ap-southeast-2:
      Ubuntu140464bit: ami-011c4b342f4cb988c
    eu-west-1:
      Ubuntu140464bit: ami-0fe71c53bc8cb7800
    us-east-1:
      Ubuntu140464bit: ami-0aeb8006205ecb87a
    us-east-2:
      Ubuntu140464bit: ami-0e9b552f26e2d73d1
    us-west-1:
      Ubuntu140464bit: ami-097cb363b4eeed29e
    us-west-2:
      Ubuntu140464bit: ami-02e64c54b064f139f
